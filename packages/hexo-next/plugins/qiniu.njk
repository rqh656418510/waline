{%- if config.waline.qiniuDomain and config.waline.qiniuTokenUrl %}
  <script src="https://unpkg.com/qiniu-js@3.3.1/dist/qiniu.min.js"></script>
  <script>
    var qiniu_domain = "{{ config.waline.qiniuDomain }}";
    var qiniu_token_url = "{{ config.waline.qiniuTokenUrl }}";

    // sync get request
    function syncGet(url) {
      var xhr = null;
      if (window.XMLHttpRequest) {
        xhr = new XMLHttpRequest();
      } else {
        xhr = new ActiveXObject("Microsoft.XMLHTTP");
      }
      xhr.open('GET', url, false);
      xhr.send();
      if (xhr.status === 200) {
        return xhr.responseText;
      }
      return null;
    }

    // get qiniu token
    function getToken() {
      try {
        var result = syncGet(qiniu_token_url);
        var json = JSON.parse(result)
        if (json.code === 200) {
          return json.data;
        }
      } catch (err) {
        console.error("failed to get qiniu token: " + err.message);
      }
      return null;
    }

    // qiniu upload image
    async function qiniuUploadImage(file) {
      var image_path = null;
      await uploadImage(file).then(function onFulfilled(res) {
        image_path = res;
      }).catch(function onRejected(err) {
        console.error(err);
      });
      return image_path;
    }

    // upload image
    function uploadImage(file) {
      return new Promise((resolve, reject) => {
        var key = null;
        var config = null;
        var putExtra = null;
        var token = getToken();
        // upload init
        var observable = qiniu.upload(file, key, token, putExtra, config);
        // upload start
        observable.subscribe({
          next(res) {
            // upload progress
          },
          error(err) {
            // upload error
            reject("falied to upload image for qiniu: " + err.name);
          },
          complete(res) {
            // upload complete
            resolve(qiniu_domain + "/" + res.hash);
          }
        });
      });
    }
  </script>
{%- endif %}
