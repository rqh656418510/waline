name: '[docker] CI for releases'

on:
  push:
    branches:
      - main
    paths:
      - 'packages/server/*'

jobs:
  path-context:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # - name: Cache Docker layers
      #   uses: actions/cache@v2.1.6
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-buildx-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Return Package Version
        id: pkg-version
        run: |
          version=$(cat packages/server/package.json | python -c 'import json,sys;obj=json.load(sys.stdin);print(obj["version"]);')
          echo "::set-output name=version::$version"

      - name: Build and push alpine
        if: contains(github.event.head_commit.message, 'release @waline/vercel')
        uses: docker/build-push-action@v3
        with:
          file: ./packages/server/Dockerfile.alpine
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            lizheming/waline:alpine
            lizheming/waline:${{steps.pkg-version.outputs.version}}-alpine
          # cache-from: type=local,src=/tmp/.buildx-cache
          # cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

      - name: Build and push debian
        if: contains(github.event.head_commit.message, 'release @waline/vercel')
        uses: docker/build-push-action@v3
        with:
          file: ./packages/server/Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            lizheming/waline:latest
            lizheming/waline:${{steps.pkg-version.outputs.version}}
          # cache-from: type=local,src=/tmp/.buildx-cache
          # cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

      # - name: Login to ghcr.io
      #   run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # - name: Build and push alpine - ghcr.io
      #   if: contains(github.event.head_commit.message, 'release @waline/vercel')
      #   uses: docker/build-push-action@v3
      #   with:
      #     file: ./packages/server/Dockerfile.alpine
      #     platforms: linux/amd64,linux/arm64,linux/arm/v7
      #     push: true
      #     tags: |
      #       ghcr.io/lizheming/waline:alpine
      #       ghcr.io/lizheming/waline:${{steps.pkg-version.outputs.version}}-alpine
